-Clases abstractas

Representan conceptos generales que no pueden instanciarse directamente.

Sirven como base para otras clases que heredan sus características.

En UML, se identifican con el nombre en cursiva o usando la palabra clave «abstract».

-Interfaces

Definen un conjunto de métodos sin implementación, que otras clases deben implementar.

Permiten definir comportamientos comunes entre clases no relacionadas.

En UML, se representan con el estereotipo «interface» o con una notación de “lollipop” (círculo unido por una línea).

-Importancia en el diseño UML

Permiten crear estructuras de software más flexibles, escalables y comprensibles.

Facilitan la colaboración y comunicación dentro de un equipo de desarrollo.

Son esenciales para modelar jerarquías de herencia y contratos de comportamiento entre clases.